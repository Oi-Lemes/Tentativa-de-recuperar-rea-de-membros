// 1. O provider agora é "postgresql"
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// 2. O ID do User agora é um Int (autoincremento)
// Adicionados campos 'hotmartId' e 'status' como na referência
model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  name       String?
  hotmartId  String?  @unique
  status     String?  @default("pending") // Ex: "active", "cancelled"

  progressos Progresso[]
  magicLinks MagicLink[]
}

model Modulo {
  id          Int      @id @default(autoincrement())
  nome        String
  description String
  ordem       Int
  imagem      String
  aulas       Aula[]
}

model Aula {
  id         Int         @id @default(autoincrement())
  nome       String
  descricao  String
  videoUrl   String
  ordem      Int
  modulo     Modulo      @relation(fields: [moduloId], references: [id])
  moduloId   Int
  progressos Progresso[]
}

// 3. O userId agora é um Int para corresponder ao novo ID do User
model Progresso {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  aula      Aula    @relation(fields: [aulaId], references: [id])
  aulaId    Int
  concluida Boolean @default(false)

  @@unique([userId, aulaId])
}

// 4. O userId aqui também é um Int
model MagicLink {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  email     String
  token     String   @unique
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}